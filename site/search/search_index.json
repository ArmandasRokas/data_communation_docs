{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Data communication Notes from 62577 Data Communication Spring 21 course at DTU.","title":"Data communication"},{"location":"#data-communication","text":"Notes from 62577 Data Communication Spring 21 course at DTU.","title":"Data communication"},{"location":"week1_book/","text":"Chapter 1 Review Questions R1 What is the difference between a host and an end system? List several different types of end systems. Is a Web server an end system? There is no difference. Throughout this text, the words \"host\" and \"end system\" are used interchangeably. End systems include PCs, workstations, Web servers, mail servers, PDAs, Internet-connnected game consoles, etc. R16 Consider sending a packet from a source host over a fixed route. List the delay components in the end-to-end delay. Which of these delays are constant and which are variable? The delay components are processing delays, transmission delays, propagation delays, and queuing delays. All of these delays are fixed, except for the queuing delays, which are variable. R19 Suppose Host A wants to send a large file to host B. The path from Host A to Host B has three links, of rates R1=500kbs, R2=2Mbps, and R3=1Mbps a) Assuming no ther traffic in the network, what is the throughput for the file transfer? 500kbs b) Suppose the file is 4 million bytes. Diving the file size by the throughout, roughly how long will it take to transfer the file to Host 4.000.000/(500000/8) = 64sec c) Repeat a) and b), but now with R_2 reduced to 100kbps a) 100kbp, b) 4.000.000/(100000/8)= 320sec P1 Design and describe an application-level protocol to be used between an automatic teller machine and a bank's centralized computer. Messages from ATM machine to Server Msg name purpose -------- ------- HELO <userid> Let server know that there is a card in the ATM machine ATM card transmits user ID to Server PASSWD <passwd> User enters PIN, which is sent to server BALANCE User requests balance WITHDRAWL <amount> User asks to withdraw money BYE user all done Messages from Server to ATM machine (display) Msg name purpose -------- ------- PASSWD Ask user for PIN (password) OK last requested operation (PASSWD, WITHDRAWL) OK ERR last requested operation (PASSWD, WITHDRAWL) in ERROR AMOUNT <amt> sent in response to BALANCE request BYE user done, display welcome screen at ATM Correct operation: client server HELO (userid) --------------> (check if valid userid) <------------- PASSWD PASSWD <passwd> --------------> (check password) <------------- OK (password is OK) BALANCE --------------> <------------- AMOUNT <amt> WITHDRAWL <amt> --------------> check if enough $ to cover withdrawl <------------- OK ATM dispenses $ BYE --------------> <------------- BYE P5 Review the car-caravn analogy in Section 1.4. Assume a propagtion speed of 100 km/hour. a) Suppose the carancan travels 150km, beginning in front of one tollbooth, passing through a second tollbooth, and finishing just after a third tollbooth. What is the end to-end delays? Transmission delay for all three tollbooth: 12*10*3 = 360sec = 6min 12*10*3 = 360sec = 6min Propagation delay: 150\u00f7100*60 = 90min 150\u00f7100*60 = 90min Total: 96min 96min b) Repeat a), now assuming that there are eith cars in the caravan instead of ten. Transmission delay for all three tollbooth: 12*8*3 = 288sec = 5min 12*8*3 = 288sec = 5min Propagation delay: 150\u00f7100*60 = 90min 150\u00f7100*60 = 90min Total: 95min 95min P6 This elementary problem begins to explore propagation delay and transmission delay, two central concepts in data networking. Consider two hosts, A and B, connected by a single link of rate R bps. Suppose that the two hosts are separated by m meters and suppose the propagation speed along the link is s meters/sec. Host A is to send a packet of size L bits to Host B. a) Express the propagation delay, d_{prop} d_{prop} , in terms of m and s d_{prop}=m/s d_{prop}=m/s b) Determine the transmission time of the packet d_{trans} d_{trans} in terms of L and R d_{trans}=L/R d_{trans}=L/R c) Ignoring processing and queuing delays, obtain an expression for the end-to-end delay d_{end-to-end}=(m/s+L/R) d_{end-to-end}=(m/s+L/R) d) Suppose Host A begins to transmit the packet at time t=0. At time t= d_{trans} d_{trans} , where is the last bit of the packet? The bit is just leaving Host A e) Suppose d_{prop} d_{prop} is greater than d_{trans} d_{trans} . At time t=d_{trans} t=d_{trans} , where is the first bit of the packet? The first bit is in the link and has not reached Host B f) Suppose d_{prop} d_{prop} is less than d_{trans} d_{trans} **. **At time t=d_{trans} t=d_{trans} **,**where is the first bit of the packet? The first bit has reached Host B g) Suppose s=2.5x108, L=120bits, and R=56kbps. Find the ditance m so that d_{prop} d_{prop} equals d_{trans} d_{trans} . d_{prop}=d_{trans} d_{prop}=d_{trans} m=\\frac{L}{R}s=536km m=\\frac{L}{R}s=536km","title":"Book ex."},{"location":"week1_book/#chapter-1-review-questions","text":"","title":"Chapter 1 Review Questions"},{"location":"week1_book/#r1","text":"What is the difference between a host and an end system? List several different types of end systems. Is a Web server an end system? There is no difference. Throughout this text, the words \"host\" and \"end system\" are used interchangeably. End systems include PCs, workstations, Web servers, mail servers, PDAs, Internet-connnected game consoles, etc.","title":"R1"},{"location":"week1_book/#r16","text":"Consider sending a packet from a source host over a fixed route. List the delay components in the end-to-end delay. Which of these delays are constant and which are variable? The delay components are processing delays, transmission delays, propagation delays, and queuing delays. All of these delays are fixed, except for the queuing delays, which are variable.","title":"R16"},{"location":"week1_book/#r19","text":"Suppose Host A wants to send a large file to host B. The path from Host A to Host B has three links, of rates R1=500kbs, R2=2Mbps, and R3=1Mbps","title":"R19"},{"location":"week1_book/#a","text":"Assuming no ther traffic in the network, what is the throughput for the file transfer? 500kbs","title":"a)"},{"location":"week1_book/#_1","text":"b) Suppose the file is 4 million bytes. Diving the file size by the throughout, roughly how long will it take to transfer the file to Host 4.000.000/(500000/8) = 64sec","title":""},{"location":"week1_book/#c","text":"Repeat a) and b), but now with R_2 reduced to 100kbps a) 100kbp, b) 4.000.000/(100000/8)= 320sec","title":"c)"},{"location":"week1_book/#p1","text":"Design and describe an application-level protocol to be used between an automatic teller machine and a bank's centralized computer. Messages from ATM machine to Server Msg name purpose -------- ------- HELO <userid> Let server know that there is a card in the ATM machine ATM card transmits user ID to Server PASSWD <passwd> User enters PIN, which is sent to server BALANCE User requests balance WITHDRAWL <amount> User asks to withdraw money BYE user all done Messages from Server to ATM machine (display) Msg name purpose -------- ------- PASSWD Ask user for PIN (password) OK last requested operation (PASSWD, WITHDRAWL) OK ERR last requested operation (PASSWD, WITHDRAWL) in ERROR AMOUNT <amt> sent in response to BALANCE request BYE user done, display welcome screen at ATM Correct operation: client server HELO (userid) --------------> (check if valid userid) <------------- PASSWD PASSWD <passwd> --------------> (check password) <------------- OK (password is OK) BALANCE --------------> <------------- AMOUNT <amt> WITHDRAWL <amt> --------------> check if enough $ to cover withdrawl <------------- OK ATM dispenses $ BYE --------------> <------------- BYE","title":"P1"},{"location":"week1_book/#p5","text":"Review the car-caravn analogy in Section 1.4. Assume a propagtion speed of 100 km/hour.","title":"P5"},{"location":"week1_book/#a_1","text":"Suppose the carancan travels 150km, beginning in front of one tollbooth, passing through a second tollbooth, and finishing just after a third tollbooth. What is the end to-end delays? Transmission delay for all three tollbooth: 12*10*3 = 360sec = 6min 12*10*3 = 360sec = 6min Propagation delay: 150\u00f7100*60 = 90min 150\u00f7100*60 = 90min Total: 96min 96min","title":"a)"},{"location":"week1_book/#b","text":"Repeat a), now assuming that there are eith cars in the caravan instead of ten. Transmission delay for all three tollbooth: 12*8*3 = 288sec = 5min 12*8*3 = 288sec = 5min Propagation delay: 150\u00f7100*60 = 90min 150\u00f7100*60 = 90min Total: 95min 95min","title":"b)"},{"location":"week1_book/#p6","text":"This elementary problem begins to explore propagation delay and transmission delay, two central concepts in data networking. Consider two hosts, A and B, connected by a single link of rate R bps. Suppose that the two hosts are separated by m meters and suppose the propagation speed along the link is s meters/sec. Host A is to send a packet of size L bits to Host B.","title":"P6"},{"location":"week1_book/#a_2","text":"Express the propagation delay, d_{prop} d_{prop} , in terms of m and s d_{prop}=m/s d_{prop}=m/s","title":"a)"},{"location":"week1_book/#b_1","text":"Determine the transmission time of the packet d_{trans} d_{trans} in terms of L and R d_{trans}=L/R d_{trans}=L/R","title":"b)"},{"location":"week1_book/#c_1","text":"Ignoring processing and queuing delays, obtain an expression for the end-to-end delay d_{end-to-end}=(m/s+L/R) d_{end-to-end}=(m/s+L/R)","title":"c)"},{"location":"week1_book/#d","text":"Suppose Host A begins to transmit the packet at time t=0. At time t= d_{trans} d_{trans} , where is the last bit of the packet? The bit is just leaving Host A","title":"d)"},{"location":"week1_book/#e","text":"Suppose d_{prop} d_{prop} is greater than d_{trans} d_{trans} . At time t=d_{trans} t=d_{trans} , where is the first bit of the packet? The first bit is in the link and has not reached Host B","title":"e)"},{"location":"week1_book/#f","text":"Suppose d_{prop} d_{prop} is less than d_{trans} d_{trans} **. **At time t=d_{trans} t=d_{trans} **,**where is the first bit of the packet? The first bit has reached Host B g) Suppose s=2.5x108, L=120bits, and R=56kbps. Find the ditance m so that d_{prop} d_{prop} equals d_{trans} d_{trans} . d_{prop}=d_{trans} d_{prop}=d_{trans} m=\\frac{L}{R}s=536km m=\\frac{L}{R}s=536km","title":"f)"},{"location":"week1_concepts/","text":"Internet Network of networks. A worldwide interconnection of individual networks. Internet Host End systems e.g. desktop computers, servers, mobile devices etc. Host sometimes divided into two categories: clients and servers. Page 38 Server Servers tend to be more powerful machines that store and distribute Web pages, stream video, relay e-mail, and so on. Page 38 Router A router is a networking device that forwards data packets between computer networks. Router Switch A network switch is network hardware that connect devices on computer network by using packet switching to receive and forward data to the destination device. Swtich Modem A modem is a hardware device that converts data from a digital format into suitable for a transmission medium such as telephone lines or radio. Modem Protocol A protocol defines the format and the order of messages exchanged between two or more communicating entities, as well as the actions taken on the transmission and/or receipt of a message or the event. Page 35 Network Core (network backbone) The mesh of packet switches and links that interconnects the Internet's end systems. FDM Frequency-division multiplexing. The frequency spectrum of a link is divided up among the connections established across the link. Page 55 TDM Time-division multiplexing. Time is divided into frames of fixed duration, each frame is divided into fixed number of time slots. When the network establishes a connection across a link, the network dedicates one time slot in every frame to connection ISP End systems access the Internet through Internet Service Providers. Page 30 node delay As packet travels from one node(host or router) to the subsequent node(host or router) along this path, the packet suffers from several types of delays at each node along the path. The most important of these delays are the nodal processing delay, queuing delay, transmission delay and propagation delay . TCP/IP protocol stack It is conceptual model and set of communications protocols used in the Internet. TCP/IP TCP/IP protocol stack Denial-of-service (DoS) Denial-of-service attack (DoS attack) is a cyber-attack in which the perpetrator seeks to make a machine or network resource unavailable to its intended users by temporarily or indefinitely disrupting services of a host connected to the Internet. Denial of service is typically accomplished by flooding the targeted machine or resource with superfluous requests in an attempt to overload systems and prevent some or all legitimate requests from being fulfilled. DoS DDoS Distributed denial-of-service attack, the incoming traffic flooding the victim originates from many different sources. DDoS Packet sniffing Packet sniffing is the practice of gathering, collecting, and logging some or all packets that pass through a computer network, regardless of how the packet is addressed. In this way, every packet, or a defined subset of packets, may be gathered for further analysis. Packet sniffing Man-in-the-middle attack Cyberattack where the attacker secretly relays and possibly alters the communications between two parties who believe that they are directly communicating with each other. MITM Circuit switching The switches on the path between the sender and receiver maintain connection state for that connection. In the jargon of telephony, this connection is called a circuit. End-to-end routing The end-to-end routing process is analogous to a car driver who does not use maps but instead prefers to ask for directions. Page 53 Link The term link is widely used in computer networking to refer to the communications facilities that connect nodes of a network. Link Multiplexing Multiplexing is a technique used to combine and send the multiple data streams over a single medium. Mutiplexing","title":"Concepts"},{"location":"week1_concepts/#internet","text":"Network of networks. A worldwide interconnection of individual networks. Internet","title":"Internet"},{"location":"week1_concepts/#host","text":"End systems e.g. desktop computers, servers, mobile devices etc. Host sometimes divided into two categories: clients and servers. Page 38","title":"Host"},{"location":"week1_concepts/#server","text":"Servers tend to be more powerful machines that store and distribute Web pages, stream video, relay e-mail, and so on. Page 38","title":"Server"},{"location":"week1_concepts/#router","text":"A router is a networking device that forwards data packets between computer networks. Router","title":"Router"},{"location":"week1_concepts/#switch","text":"A network switch is network hardware that connect devices on computer network by using packet switching to receive and forward data to the destination device. Swtich","title":"Switch"},{"location":"week1_concepts/#modem","text":"A modem is a hardware device that converts data from a digital format into suitable for a transmission medium such as telephone lines or radio. Modem","title":"Modem"},{"location":"week1_concepts/#protocol","text":"A protocol defines the format and the order of messages exchanged between two or more communicating entities, as well as the actions taken on the transmission and/or receipt of a message or the event. Page 35","title":"Protocol"},{"location":"week1_concepts/#network-core-network-backbone","text":"The mesh of packet switches and links that interconnects the Internet's end systems.","title":"Network Core (network backbone)"},{"location":"week1_concepts/#fdm","text":"Frequency-division multiplexing. The frequency spectrum of a link is divided up among the connections established across the link. Page 55","title":"FDM"},{"location":"week1_concepts/#tdm","text":"Time-division multiplexing. Time is divided into frames of fixed duration, each frame is divided into fixed number of time slots. When the network establishes a connection across a link, the network dedicates one time slot in every frame to connection","title":"TDM"},{"location":"week1_concepts/#isp","text":"End systems access the Internet through Internet Service Providers. Page 30","title":"ISP"},{"location":"week1_concepts/#node-delay","text":"As packet travels from one node(host or router) to the subsequent node(host or router) along this path, the packet suffers from several types of delays at each node along the path. The most important of these delays are the nodal processing delay, queuing delay, transmission delay and propagation delay .","title":"node delay"},{"location":"week1_concepts/#tcpip-protocol-stack","text":"It is conceptual model and set of communications protocols used in the Internet. TCP/IP TCP/IP protocol stack","title":"TCP/IP protocol stack"},{"location":"week1_concepts/#denial-of-service-dos","text":"Denial-of-service attack (DoS attack) is a cyber-attack in which the perpetrator seeks to make a machine or network resource unavailable to its intended users by temporarily or indefinitely disrupting services of a host connected to the Internet. Denial of service is typically accomplished by flooding the targeted machine or resource with superfluous requests in an attempt to overload systems and prevent some or all legitimate requests from being fulfilled. DoS","title":"Denial-of-service (DoS)"},{"location":"week1_concepts/#ddos","text":"Distributed denial-of-service attack, the incoming traffic flooding the victim originates from many different sources. DDoS","title":"DDoS"},{"location":"week1_concepts/#packet-sniffing","text":"Packet sniffing is the practice of gathering, collecting, and logging some or all packets that pass through a computer network, regardless of how the packet is addressed. In this way, every packet, or a defined subset of packets, may be gathered for further analysis. Packet sniffing","title":"Packet sniffing"},{"location":"week1_concepts/#man-in-the-middle-attack","text":"Cyberattack where the attacker secretly relays and possibly alters the communications between two parties who believe that they are directly communicating with each other. MITM","title":"Man-in-the-middle attack"},{"location":"week1_concepts/#circuit-switching","text":"The switches on the path between the sender and receiver maintain connection state for that connection. In the jargon of telephony, this connection is called a circuit.","title":"Circuit switching"},{"location":"week1_concepts/#end-to-end-routing","text":"The end-to-end routing process is analogous to a car driver who does not use maps but instead prefers to ask for directions. Page 53","title":"End-to-end routing"},{"location":"week1_concepts/#link","text":"The term link is widely used in computer networking to refer to the communications facilities that connect nodes of a network. Link","title":"Link"},{"location":"week1_concepts/#multiplexing","text":"Multiplexing is a technique used to combine and send the multiple data streams over a single medium. Mutiplexing","title":"Multiplexing"},{"location":"week1_practise/","text":"Traceroute Each hop represented by a different line TTL how long a packet can live before it discarded. * * * means that the router at that hop doesn't respond to the packet. First column the number of hop. Second column destination address. Traceroute will actually send three packets of data, and measure the time taken for each - this is shown in the 3 columns after the destination eb.dk (base) arm@arm-DELL:~$ traceroute www.eb.dk traceroute to www.eb.dk (91.214.22.65), 30 hops max, 60 byte packets 1 _gateway (192.168.43.30) 156.456 ms 156.360 ms 156.414 ms 2 * * * 3 10.117.2.172 (10.117.2.172) 158.470 ms 158.430 ms 158.389 ms 4 10.219.160.20 (10.219.160.20) 158.348 ms * * 5 195-215-224-90-static.dk.customer.tdc.net (195.215.224.90) 301.828 ms 301.788 ms 301.747 ms 6 ae1-0.alb2nqp8.dk.ip.tdc.net (83.88.19.119) 301.709 ms 655.345 ms 655.230 ms 7 ae-6.edge2.Copenhagen2.Level3.net (4.68.72.193) 655.235 ms 654.950 ms 654.968 ms 8 213.242.108.194 (213.242.108.194) 654.853 ms 654.814 ms 654.772 ms 9 et-3-3-0-0.taas11cr1dk.gc-net.eu (77.243.32.202) 654.732 ms 654.691 ms 654.724 ms 10 212-98-126-214.hoer1cr1dk.gc-net.eu (212.98.126.214) 129.530 ms 129.451 ms 129.414 ms 11 * * * 12 * * * 13 * * * ... princeton.edu (base) arm@arm-DELL:~$ traceroute www.princeton.edu traceroute to www.princeton.edu (104.18.5.101), 30 hops max, 60 byte packets 1 _gateway (192.168.43.206) 7.518 ms 7.757 ms 7.844 ms 2 * * * 3 10.117.2.172 (10.117.2.172) 155.456 ms 155.414 ms 155.363 ms 4 10.219.160.20 (10.219.160.20) 155.313 ms 155.263 ms 155.213 ms 5 irb-610.alb2tdm13nqe2.dk.ip.tdc.net (195.215.224.90) 155.173 ms 155.150 ms 155.091 ms 6 ae0-0.alb2nqp8.dk.ip.tdc.net (83.88.19.117) 155.069 ms 18.168 ms 22.646 ms 7 peer-as13335.alb2nqp8.dk.ip.tdc.net (128.76.59.91) 942.923 ms 943.039 ms 943.030 ms 8 104.18.5.101 (104.18.5.101) 942.894 ms 942.884 ms 942.875 ms (base) arm@arm-DELL:~$","title":"Practise"},{"location":"week1_practise/#traceroute","text":"Each hop represented by a different line TTL how long a packet can live before it discarded. * * * means that the router at that hop doesn't respond to the packet. First column the number of hop. Second column destination address. Traceroute will actually send three packets of data, and measure the time taken for each - this is shown in the 3 columns after the destination","title":"Traceroute"},{"location":"week1_practise/#ebdk","text":"(base) arm@arm-DELL:~$ traceroute www.eb.dk traceroute to www.eb.dk (91.214.22.65), 30 hops max, 60 byte packets 1 _gateway (192.168.43.30) 156.456 ms 156.360 ms 156.414 ms 2 * * * 3 10.117.2.172 (10.117.2.172) 158.470 ms 158.430 ms 158.389 ms 4 10.219.160.20 (10.219.160.20) 158.348 ms * * 5 195-215-224-90-static.dk.customer.tdc.net (195.215.224.90) 301.828 ms 301.788 ms 301.747 ms 6 ae1-0.alb2nqp8.dk.ip.tdc.net (83.88.19.119) 301.709 ms 655.345 ms 655.230 ms 7 ae-6.edge2.Copenhagen2.Level3.net (4.68.72.193) 655.235 ms 654.950 ms 654.968 ms 8 213.242.108.194 (213.242.108.194) 654.853 ms 654.814 ms 654.772 ms 9 et-3-3-0-0.taas11cr1dk.gc-net.eu (77.243.32.202) 654.732 ms 654.691 ms 654.724 ms 10 212-98-126-214.hoer1cr1dk.gc-net.eu (212.98.126.214) 129.530 ms 129.451 ms 129.414 ms 11 * * * 12 * * * 13 * * * ...","title":"eb.dk"},{"location":"week1_practise/#princetonedu","text":"(base) arm@arm-DELL:~$ traceroute www.princeton.edu traceroute to www.princeton.edu (104.18.5.101), 30 hops max, 60 byte packets 1 _gateway (192.168.43.206) 7.518 ms 7.757 ms 7.844 ms 2 * * * 3 10.117.2.172 (10.117.2.172) 155.456 ms 155.414 ms 155.363 ms 4 10.219.160.20 (10.219.160.20) 155.313 ms 155.263 ms 155.213 ms 5 irb-610.alb2tdm13nqe2.dk.ip.tdc.net (195.215.224.90) 155.173 ms 155.150 ms 155.091 ms 6 ae0-0.alb2nqp8.dk.ip.tdc.net (83.88.19.117) 155.069 ms 18.168 ms 22.646 ms 7 peer-as13335.alb2nqp8.dk.ip.tdc.net (128.76.59.91) 942.923 ms 943.039 ms 943.030 ms 8 104.18.5.101 (104.18.5.101) 942.894 ms 942.884 ms 942.875 ms (base) arm@arm-DELL:~$","title":"princeton.edu"},{"location":"week1_questions/","text":"Delay in a network node Which parts are included in the calculation of the delay in a network node? - Processing delay - Queuing delay - Transmission delay - Propagation delay TCP/IP procotoal stack Which layers exist in the TCP/IP protocol stack? TCP IP stack Security What can threaten security in a system? Viruses Worms Denial-of-service(DoS) attacks Vulnerability attacks Bandwidth flooding Connection flooding Sniff Packets","title":"Questions"},{"location":"week1_questions/#delay-in-a-network-node","text":"Which parts are included in the calculation of the delay in a network node? - Processing delay - Queuing delay - Transmission delay - Propagation delay","title":"Delay in a network node"},{"location":"week1_questions/#tcpip-procotoal-stack","text":"Which layers exist in the TCP/IP protocol stack? TCP IP stack","title":"TCP/IP procotoal stack"},{"location":"week1_questions/#security","text":"What can threaten security in a system? Viruses Worms Denial-of-service(DoS) attacks Vulnerability attacks Bandwidth flooding Connection flooding Sniff Packets","title":"Security"},{"location":"week2_book/","text":"Chapter 2 Review Questions R2 What is the difference between network architecture and application architecture? Network architecture refers to the organization of the communication process into layers (e.g., the five-layer Internet architecture). Application architecture, on the other hand, is designed by an application developer and dictates the broad structure of the application (e.g., client-server or P2P). R4 For a P2P file-sharing application, do you agree with the statement, \u201cThere is no notion of client and server sides of a communication session\u201d? Why or why not? No. In a P2P file-sharing application, the peer that is receiving a file is typically the client and the peer that is sending the file is typically the server. R7 Referring to Figure 2.4 , we see that none of the applications listed in Figure 2.4 requires both no data loss and timing. Can you conceive of an application that requires no data loss and that is also highly time-sensitive? One such example is remote word processing, for example, with Google docs. However, because Google docs runs over the Internet (using TCP), timing guarantees are not provided. R9 Recall that TCP can be enhanced with SSL to provide process-to-process security services, including encryption. Does SSL operate at the transport layer or the application layer? If the application developer wants TCP to be enhanced with SSL, what does the developer have to do? SSL operates at the application layer. The SSL socket takes unencrypted data from the application layer, encrypts it and then passes it to the TCP socket. If the application developer wants TCP to be enhanced with SSL, she has to include the SSL code in the application. R10 What is meant by a handshaking protocol? A protocol uses handshaking if the two communicating entities first exchange control packets before sending data to each other. SMTP uses handshaking at the application layer whereas HTTP does not. R11 Why do HTTP, SMTP, and POP3 run on top of TCP rather than on UDP? The applications associated with those protocols require that all application data be received in the correct order and without gaps. TCP provides this service whereas UDP does not. R12 Consider an e-commerce site that wants to keep a purchase record for each of its customers. Describe how this can be done with cookies. When the user first visits the site, the server creates a unique identification number, creates an entry in its back-end database, and returns this identification number as a cookie number. This cookie number is stored on the user\u2019s host and is managed by the browser. During each subsequent visit (and purchase), the browser sends the cookie number back to the site. Thus the site knows when this user (more precisely, this browser) is visiting the site. R15 List several popular messaging apps. Do they use the same protocols as SMS? A list of several popular messaging apps: WhatsApp, Facebook Messenger, WeChat, and Snapchat. These apps use the different protocols than SMS. P1 True or false? a. FALSE: A user requests a Web page that consists of some text and three images. For this page, the client will send one request message and receive four response messages. b. TRUE: Two distinct Web pages (for example, www.mit.edu/research.html and www.mit.edu/students.html ) can be sent over the same persistent connection. c. FALSE:With nonpersistent connections between browser and origin server, it is possible for a single TCP segment to carry two distinct HTTP request messages. d. FALSE: The Date: header in the HTTP response message indicates when the object in the response was last modified. e. FALSE: HTTP response messages never have an empty message body. P3 Consider an HTTP client that wants to retrieve a Web document at a given URL. The IP address of the HTTP server is initially unknown. What transport and application-layer protocols besides HTTP are needed in this scenario? Application layer protocols: DNS and HTTP Transport layer protocols: UDP for DNS; TCP for HTTP P6 Obtain the HTTP/1.1 specification (RFC 2616). Answer the following questions: a Explain the mechanism used for signaling between the client and server to indicate that a persistent connection is being closed. Can the client, the server, or both signal the close of a connection? Persistent connections are discussed in section 8 of RFC 2616 (the real goal of this question was to get you to retrieve and read an RFC). Sections 8.1.2 and 8.1.2.1 of the RFC indicate that either the client or the server can indicate to the other that it is going to close the persistent connection. It does so by including the connection-token \"close\" in the Connection-header field of the http request/reply. b What encryption services are provided by HTTP? HTTP does not provide any encryption services. c Can a client open three or more simultaneous connections with a given server? (From RFC 2616) \u201cClients that use persistent connections should limit the number of simultaneous connections that they maintain to a given server. A single-user client SHOULD NOT maintain more than 2 connections with any server or proxy.\u201d d Either a server or a client may close a transport connection between them if either one detects the connection has been idle for some time. Is it possible that one side starts closing a connection while the other side is transmitting data via this connection? Explain. Yes. (From RFC 2616) \u201cA client might have started to send a new request at the same time that the server has decided to close the \"idle\" connection. From the server's point of view, the connection is being closed while it was idle, but from the client's point of view, a request is in progress.\u201d","title":"Chapter 2 Review Questions"},{"location":"week2_book/#chapter-2-review-questions","text":"","title":"Chapter 2 Review Questions"},{"location":"week2_book/#r2","text":"What is the difference between network architecture and application architecture? Network architecture refers to the organization of the communication process into layers (e.g., the five-layer Internet architecture). Application architecture, on the other hand, is designed by an application developer and dictates the broad structure of the application (e.g., client-server or P2P).","title":"R2"},{"location":"week2_book/#r4","text":"For a P2P file-sharing application, do you agree with the statement, \u201cThere is no notion of client and server sides of a communication session\u201d? Why or why not? No. In a P2P file-sharing application, the peer that is receiving a file is typically the client and the peer that is sending the file is typically the server.","title":"R4"},{"location":"week2_book/#r7","text":"Referring to Figure 2.4 , we see that none of the applications listed in Figure 2.4 requires both no data loss and timing. Can you conceive of an application that requires no data loss and that is also highly time-sensitive? One such example is remote word processing, for example, with Google docs. However, because Google docs runs over the Internet (using TCP), timing guarantees are not provided.","title":"R7"},{"location":"week2_book/#r9","text":"Recall that TCP can be enhanced with SSL to provide process-to-process security services, including encryption. Does SSL operate at the transport layer or the application layer? If the application developer wants TCP to be enhanced with SSL, what does the developer have to do? SSL operates at the application layer. The SSL socket takes unencrypted data from the application layer, encrypts it and then passes it to the TCP socket. If the application developer wants TCP to be enhanced with SSL, she has to include the SSL code in the application.","title":"R9"},{"location":"week2_book/#r10","text":"What is meant by a handshaking protocol? A protocol uses handshaking if the two communicating entities first exchange control packets before sending data to each other. SMTP uses handshaking at the application layer whereas HTTP does not.","title":"R10"},{"location":"week2_book/#r11","text":"Why do HTTP, SMTP, and POP3 run on top of TCP rather than on UDP? The applications associated with those protocols require that all application data be received in the correct order and without gaps. TCP provides this service whereas UDP does not.","title":"R11"},{"location":"week2_book/#r12","text":"Consider an e-commerce site that wants to keep a purchase record for each of its customers. Describe how this can be done with cookies. When the user first visits the site, the server creates a unique identification number, creates an entry in its back-end database, and returns this identification number as a cookie number. This cookie number is stored on the user\u2019s host and is managed by the browser. During each subsequent visit (and purchase), the browser sends the cookie number back to the site. Thus the site knows when this user (more precisely, this browser) is visiting the site.","title":"R12"},{"location":"week2_book/#r15","text":"List several popular messaging apps. Do they use the same protocols as SMS? A list of several popular messaging apps: WhatsApp, Facebook Messenger, WeChat, and Snapchat. These apps use the different protocols than SMS.","title":"R15"},{"location":"week2_book/#p1","text":"True or false? a. FALSE: A user requests a Web page that consists of some text and three images. For this page, the client will send one request message and receive four response messages. b. TRUE: Two distinct Web pages (for example, www.mit.edu/research.html and www.mit.edu/students.html ) can be sent over the same persistent connection. c. FALSE:With nonpersistent connections between browser and origin server, it is possible for a single TCP segment to carry two distinct HTTP request messages. d. FALSE: The Date: header in the HTTP response message indicates when the object in the response was last modified. e. FALSE: HTTP response messages never have an empty message body.","title":"P1"},{"location":"week2_book/#p3","text":"Consider an HTTP client that wants to retrieve a Web document at a given URL. The IP address of the HTTP server is initially unknown. What transport and application-layer protocols besides HTTP are needed in this scenario? Application layer protocols: DNS and HTTP Transport layer protocols: UDP for DNS; TCP for HTTP","title":"P3"},{"location":"week2_book/#p6","text":"Obtain the HTTP/1.1 specification (RFC 2616). Answer the following questions:","title":"P6"},{"location":"week2_book/#a","text":"Explain the mechanism used for signaling between the client and server to indicate that a persistent connection is being closed. Can the client, the server, or both signal the close of a connection? Persistent connections are discussed in section 8 of RFC 2616 (the real goal of this question was to get you to retrieve and read an RFC). Sections 8.1.2 and 8.1.2.1 of the RFC indicate that either the client or the server can indicate to the other that it is going to close the persistent connection. It does so by including the connection-token \"close\" in the Connection-header field of the http request/reply.","title":"a"},{"location":"week2_book/#b","text":"What encryption services are provided by HTTP? HTTP does not provide any encryption services.","title":"b"},{"location":"week2_book/#c","text":"Can a client open three or more simultaneous connections with a given server? (From RFC 2616) \u201cClients that use persistent connections should limit the number of simultaneous connections that they maintain to a given server. A single-user client SHOULD NOT maintain more than 2 connections with any server or proxy.\u201d","title":"c"},{"location":"week2_book/#d","text":"Either a server or a client may close a transport connection between them if either one detects the connection has been idle for some time. Is it possible that one side starts closing a connection while the other side is transmitting data via this connection? Explain. Yes. (From RFC 2616) \u201cA client might have started to send a new request at the same time that the server has decided to close the \"idle\" connection. From the server's point of view, the connection is being closed while it was idle, but from the client's point of view, a request is in progress.\u201d","title":"d"},{"location":"week2_concepts/","text":"Server Client Client\u2013server model is a distributed application structure that partitions tasks or workloads between the providers of a resource or service, called servers, and service requesters, called clients. Client-server model P2P Peer-to-peer ( P2P ) computing or networking is a distributed application architecture that partitions tasks or workloads between peers. P2P . Peers make a portion of their resources, such as processing power, disk storage or network bandwidth, directly available to other network participants, without the need for central coordination by servers or stable hosts.[ 1] Peers are both suppliers and consumers of resources, in contrast to the traditional client-server model in which the consumption and supply of resources is divided. Protocols in different Layer Port A port is a communication endpoint. At the software level a port is a logical construct that identifies a specific process . Port This information is needed because in general a host could be running many network applications. Page 119 Socket A process sends messages into, and receives messages from, the network through a software interface called a socket. A process is analogous to a house and its socket is analogous to its door. Page 119. HTTP The Web's applications protocol, HTTP, defines the format and sequence of messages exchanged between browsers and Web Server. HTTP is only one piece of the Web application. Page 126 Persistent All of the request and their corresponding responses is sent over the same TCP connection Non persistent Each request/response pair is sent over separate TCP connection Cookies Cookies allows sites to keep track of users. Cookie technology has four components: A cookie header line in the HTTP response message. A cookie header line in the HTTP request message. A cookie file kelp on the user's end system and managed by the user's browser. A back-end database at the Website Page 139 Cache/Proxy Server A Web cache - also called a proxy server - is a network entity that satisfies HTTP requests on the behalf of an origin Web server. The web cache has its own disk storage and keeps copies of recently requested objects in this storage. Web cache can substantially reduce the response time for a client request Web caches can substantially reduce traffic on an institution access link to the Internet. Page 143 Last modified Last-Modified header is critical for object caching, both in the local client and in network cache servers(also known as proxy servers) SMTP SMTP is the principal application-layer protocol for Internet electronic mail. It uses the reliable data transfer service of TCP to transfer mail from sender's mail server to the recipient's mail server. Page 149 Stateless protocol In computing, a stateless protocol is a communications protocol in which no session information is retained by the receiver, usually a server. Stateless protocol","title":"Week2 concepts"},{"location":"week2_concepts/#server-client","text":"Client\u2013server model is a distributed application structure that partitions tasks or workloads between the providers of a resource or service, called servers, and service requesters, called clients. Client-server model","title":"Server Client"},{"location":"week2_concepts/#p2p","text":"Peer-to-peer ( P2P ) computing or networking is a distributed application architecture that partitions tasks or workloads between peers. P2P . Peers make a portion of their resources, such as processing power, disk storage or network bandwidth, directly available to other network participants, without the need for central coordination by servers or stable hosts.[ 1] Peers are both suppliers and consumers of resources, in contrast to the traditional client-server model in which the consumption and supply of resources is divided.","title":"P2P"},{"location":"week2_concepts/#protocols-in-different-layer","text":"","title":"Protocols in different Layer"},{"location":"week2_concepts/#port","text":"A port is a communication endpoint. At the software level a port is a logical construct that identifies a specific process . Port This information is needed because in general a host could be running many network applications. Page 119","title":"Port"},{"location":"week2_concepts/#socket","text":"A process sends messages into, and receives messages from, the network through a software interface called a socket. A process is analogous to a house and its socket is analogous to its door. Page 119.","title":"Socket"},{"location":"week2_concepts/#http","text":"The Web's applications protocol, HTTP, defines the format and sequence of messages exchanged between browsers and Web Server. HTTP is only one piece of the Web application. Page 126","title":"HTTP"},{"location":"week2_concepts/#persistent","text":"All of the request and their corresponding responses is sent over the same TCP connection","title":"Persistent"},{"location":"week2_concepts/#non-persistent","text":"Each request/response pair is sent over separate TCP connection","title":"Non persistent"},{"location":"week2_concepts/#cookies","text":"Cookies allows sites to keep track of users. Cookie technology has four components: A cookie header line in the HTTP response message. A cookie header line in the HTTP request message. A cookie file kelp on the user's end system and managed by the user's browser. A back-end database at the Website Page 139","title":"Cookies"},{"location":"week2_concepts/#cacheproxy-server","text":"A Web cache - also called a proxy server - is a network entity that satisfies HTTP requests on the behalf of an origin Web server. The web cache has its own disk storage and keeps copies of recently requested objects in this storage. Web cache can substantially reduce the response time for a client request Web caches can substantially reduce traffic on an institution access link to the Internet. Page 143","title":"Cache/Proxy Server"},{"location":"week2_concepts/#last-modified","text":"Last-Modified header is critical for object caching, both in the local client and in network cache servers(also known as proxy servers)","title":"Last modified"},{"location":"week2_concepts/#smtp","text":"SMTP is the principal application-layer protocol for Internet electronic mail. It uses the reliable data transfer service of TCP to transfer mail from sender's mail server to the recipient's mail server. Page 149","title":"SMTP"},{"location":"week2_concepts/#stateless-protocol","text":"In computing, a stateless protocol is a communications protocol in which no session information is retained by the receiver, usually a server. Stateless protocol","title":"Stateless protocol"},{"location":"week2_questions/","text":"What are the 4 aspects of data reliability? A reliable service is one that notifies the user if delivery fails, while an unreliable one does not notify the user if delivery fails All data is sent (no missing or duplicates bytes) The proper order Page 123 What is a server? A host, which services requests from many other hosts, called clients. Page 115 What are the 2 different types of Transport layer protocol? Compare them Transmission control protocol (TCP) User datagram protocol (UDP) TCP is a connection-oriented protocol. Connection-orientation means that the communicating devices should establish a connection before transmitting data and should close the connection after transmitting the data. UDP is the Datagram oriented protocol. This is because there is no overhead for opening a connection, maintaining a connection, and terminating a connection. UDP is efficient for broadcast and multicast type of network transmission. TCP is reliable as it guarantees delivery of data to the destination router. The delivery of data to the destination cannot be guaranteed in UDP. TCP provides extensive error checking mechanisms. It is because it provides flow control and acknowledgment of data. UDP has only the basic error checking mechanism using checksums. Sequencing of data is a feature of Transmission Control Protocol (TCP). this means that packets arrive in-order at the receiver. There is no sequencing of data in UDP. If ordering is required, it has to be managed by the application layer. TCP is comparatively slower than UDP. TCP is comparatively slower than UDP. Retransmission of lost packets is possible in TCP, but not in UDP. There is no retransmission of lost packets in User Datagram Protocol (UDP). TCP has a (20-80) bytes variable length header. UDP has a 8 bytes fixed length header. TCP is heavy-weight. UDP is lightweight. TCP doesn\u2019t supports Broadcasting. UDP supports Broadcasting. TCP is used by HTTP, HTTPs, FTP, SMTP and Telnet. UDP is used by DNS, DHCP, TFTP, SNMP, RIP, and VoIP. TCP vs UDP How does caching work? The browser establishes a TCP connection to the Web cache and sends an HTTP request for the object to the Web cache. The web cache checks to see if it has a copy o the object stored locally. If it does, the Web cache returns the object within an HTTP reposnse message to the client browser If the cache does not have the object, the Web cache opens TCP connection to the origin server. The Web cache then sends an HTTP request for the object into the cache-to-server TCP connection. After receiving this request, the origin server sends the object within an HTTP response to the Web cache. When the Web cache receives the object, it stores a copy in its local storage and sends a copy, within an HTTP response message, to the client browser(over the existing TCP connection between the client browser and the Web cache). What are cookies? See Cookies How does SMTP work, try the live on thinlinc!!","title":"Week2 questions"},{"location":"week2_questions/#what-are-the-4-aspects-of-data-reliability","text":"A reliable service is one that notifies the user if delivery fails, while an unreliable one does not notify the user if delivery fails All data is sent (no missing or duplicates bytes) The proper order Page 123","title":"What are the 4 aspects of data reliability?"},{"location":"week2_questions/#what-is-a-server","text":"A host, which services requests from many other hosts, called clients. Page 115","title":"What is a server?"},{"location":"week2_questions/#what-are-the-2-different-types-of-transport-layer-protocol-compare-them","text":"Transmission control protocol (TCP) User datagram protocol (UDP) TCP is a connection-oriented protocol. Connection-orientation means that the communicating devices should establish a connection before transmitting data and should close the connection after transmitting the data. UDP is the Datagram oriented protocol. This is because there is no overhead for opening a connection, maintaining a connection, and terminating a connection. UDP is efficient for broadcast and multicast type of network transmission. TCP is reliable as it guarantees delivery of data to the destination router. The delivery of data to the destination cannot be guaranteed in UDP. TCP provides extensive error checking mechanisms. It is because it provides flow control and acknowledgment of data. UDP has only the basic error checking mechanism using checksums. Sequencing of data is a feature of Transmission Control Protocol (TCP). this means that packets arrive in-order at the receiver. There is no sequencing of data in UDP. If ordering is required, it has to be managed by the application layer. TCP is comparatively slower than UDP. TCP is comparatively slower than UDP. Retransmission of lost packets is possible in TCP, but not in UDP. There is no retransmission of lost packets in User Datagram Protocol (UDP). TCP has a (20-80) bytes variable length header. UDP has a 8 bytes fixed length header. TCP is heavy-weight. UDP is lightweight. TCP doesn\u2019t supports Broadcasting. UDP supports Broadcasting. TCP is used by HTTP, HTTPs, FTP, SMTP and Telnet. UDP is used by DNS, DHCP, TFTP, SNMP, RIP, and VoIP. TCP vs UDP","title":"What are the 2 different types of Transport layer protocol? Compare them"},{"location":"week2_questions/#how-does-caching-work","text":"The browser establishes a TCP connection to the Web cache and sends an HTTP request for the object to the Web cache. The web cache checks to see if it has a copy o the object stored locally. If it does, the Web cache returns the object within an HTTP reposnse message to the client browser If the cache does not have the object, the Web cache opens TCP connection to the origin server. The Web cache then sends an HTTP request for the object into the cache-to-server TCP connection. After receiving this request, the origin server sends the object within an HTTP response to the Web cache. When the Web cache receives the object, it stores a copy in its local storage and sends a copy, within an HTTP response message, to the client browser(over the existing TCP connection between the client browser and the Web cache).","title":"How does caching work?"},{"location":"week2_questions/#what-are-cookies","text":"See Cookies","title":"What are cookies?"},{"location":"week2_questions/#how-does-smtp-work-try-the-live-on-thinlinc","text":"","title":"How does SMTP work, try the live on thinlinc!!"}]}